<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="30"/>
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="10"/>
        <!-- 每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="1024"/>
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <!-- 连接最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="10000"/>
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="1500"/>
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="true"/>
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="true"/>
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="false"/>
    </bean>

    <!-- redis单机 -->
    <bean id="redisClient" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="${REDIS_HOST}"/>
        <constructor-arg name="port" value="${REDIS_PORT}"/>
        <constructor-arg name="timeout" value="${REDIS_CONNECTION_TIMEOUT}"/>
        <constructor-arg name="password" value="${REDIS_PASSWORD}"/>
    </bean>

    <bean id="jedisClientSingle" class="com.shop.rest.dao.impl.JedisClientSingle"/>

    <!-- redis集群 -->
    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
        <constructor-arg name="jedisClusterNode">
            <set>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${REDIS_HOST}"/>
                    <constructor-arg name="port" value="${REDIS_NODE_1_PORT}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${REDIS_HOST}"/>
                    <constructor-arg name="port" value="${REDIS_NODE_2_PORT}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${REDIS_HOST}"/>
                    <constructor-arg name="port" value="${REDIS_NODE_3_PORT}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${REDIS_HOST}"/>
                    <constructor-arg name="port" value="${REDIS_NODE_4_PORT}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${REDIS_HOST}"/>
                    <constructor-arg name="port" value="${REDIS_NODE_5_PORT}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${REDIS_HOST}"/>
                    <constructor-arg name="port" value="${REDIS_NODE_6_PORT}"/>
                </bean>
            </set>

        </constructor-arg>
        <constructor-arg name="connectionTimeout" value="${REDIS_CONNECTION_TIMEOUT}"/>
        <constructor-arg name="soTimeout" value="${REDIS_SOCKET_TIMEOUT}"/>
        <constructor-arg name="maxAttempts" value="${REDIS_MAX_ATTEMPTS}"/>
        <constructor-arg name="password" value="${REDIS_PASSWORD}"/>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
    </bean>

    <bean id="jedisClientCluster" class="com.shop.rest.dao.impl.JedisClientCluster"/>

</beans>